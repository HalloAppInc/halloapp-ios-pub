// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: receipts.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct Proto_Receipts {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var receipts: [Proto_Receipts.Receipt] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct Receipt {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var userID: String = String()

    var timestampDelivered: SwiftProtobuf.Google_Protobuf_Timestamp {
      get {return _timestampDelivered ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
      set {_timestampDelivered = newValue}
    }
    /// Returns true if `timestampDelivered` has been explicitly set.
    var hasTimestampDelivered: Bool {return self._timestampDelivered != nil}
    /// Clears the value of `timestampDelivered`. Subsequent reads from it will return its default value.
    mutating func clearTimestampDelivered() {self._timestampDelivered = nil}

    var timestampSeen: SwiftProtobuf.Google_Protobuf_Timestamp {
      get {return _timestampSeen ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
      set {_timestampSeen = newValue}
    }
    /// Returns true if `timestampSeen` has been explicitly set.
    var hasTimestampSeen: Bool {return self._timestampSeen != nil}
    /// Clears the value of `timestampSeen`. Subsequent reads from it will return its default value.
    mutating func clearTimestampSeen() {self._timestampSeen = nil}

    var timestampScreenshot: SwiftProtobuf.Google_Protobuf_Timestamp {
      get {return _timestampScreenshot ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
      set {_timestampScreenshot = newValue}
    }
    /// Returns true if `timestampScreenshot` has been explicitly set.
    var hasTimestampScreenshot: Bool {return self._timestampScreenshot != nil}
    /// Clears the value of `timestampScreenshot`. Subsequent reads from it will return its default value.
    mutating func clearTimestampScreenshot() {self._timestampScreenshot = nil}

    var timestampSaved: SwiftProtobuf.Google_Protobuf_Timestamp {
      get {return _timestampSaved ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
      set {_timestampSaved = newValue}
    }
    /// Returns true if `timestampSaved` has been explicitly set.
    var hasTimestampSaved: Bool {return self._timestampSaved != nil}
    /// Clears the value of `timestampSaved`. Subsequent reads from it will return its default value.
    mutating func clearTimestampSaved() {self._timestampSaved = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _timestampDelivered: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    fileprivate var _timestampSeen: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    fileprivate var _timestampScreenshot: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    fileprivate var _timestampSaved: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
  }

  init() {}
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Proto_Receipts: @unchecked Sendable {}
extension Proto_Receipts.Receipt: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "proto"

extension Proto_Receipts: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".Receipts"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "receipts"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.receipts) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.receipts.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.receipts, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Proto_Receipts, rhs: Proto_Receipts) -> Bool {
    if lhs.receipts != rhs.receipts {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Proto_Receipts.Receipt: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = Proto_Receipts.protoMessageName + ".Receipt"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "user_id"),
    2: .standard(proto: "timestamp_delivered"),
    3: .standard(proto: "timestamp_seen"),
    4: .standard(proto: "timestamp_screenshot"),
    5: .standard(proto: "timestamp_saved"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.userID) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._timestampDelivered) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._timestampSeen) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._timestampScreenshot) }()
      case 5: try { try decoder.decodeSingularMessageField(value: &self._timestampSaved) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.userID.isEmpty {
      try visitor.visitSingularStringField(value: self.userID, fieldNumber: 1)
    }
    try { if let v = self._timestampDelivered {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try { if let v = self._timestampSeen {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    try { if let v = self._timestampScreenshot {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    } }()
    try { if let v = self._timestampSaved {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Proto_Receipts.Receipt, rhs: Proto_Receipts.Receipt) -> Bool {
    if lhs.userID != rhs.userID {return false}
    if lhs._timestampDelivered != rhs._timestampDelivered {return false}
    if lhs._timestampSeen != rhs._timestampSeen {return false}
    if lhs._timestampScreenshot != rhs._timestampScreenshot {return false}
    if lhs._timestampSaved != rhs._timestampSaved {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
