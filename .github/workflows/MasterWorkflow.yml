name: Master Branch Workflow

# Triggers
on:
  push:
    branches: [ master ] # On push/commit to master (whenever `origin/master` receives a new commit)
  workflow_dispatch: # Manual trigger (run via Actions -> CI Workflow (lefthand side) -> Run workflow)

# Environment
env:
  DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer
        
# Jobs to run. Each job is a seperate container and may/may not have dependency jobs (like finishing building before testing)
jobs:
  # Compile the project. This job sets up the repository and subsequently builds the project.
  compile:
    name: Compile Project
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@master
        
        # Set up SSH to fetch private HalloApp repositories
      - name: Set up ssh-agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.CI_PRIVATE_KEY }}
          
      - name: Set up Git to use SSH
        run: |
            for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
            git config --global url."git@github.com:".insteadOf "https://github.com/"
        
      - name: Cache Swift Packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: SourcePackages
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
                
        # Build the project for all devices
        # If you want to build for more devices, change destination to include whatever devices you want
      - name: Build Project
        run: xcodebuild clean build-for-testing
            -workspace "Halloapp.xcworkspace"
            -scheme "Halloapp"
            -destination 'platform=iOS Simulator,name=iPhone 14 Pro'
            -clonedSourcePackagesDirPath SourcePackages
            
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: build-${{ github.sha }}

  unit-test:
      name: Run Unit Tests
      runs-on: macos-13
      needs: compile
      strategy:
          matrix:
              destination: ['platform=iOS Simulator,name=iPhone 14 Pro'] # If you want to build for more devices, change this field to include whatever devices you want
      steps:
        - name: Checkout
          uses: actions/checkout@master

        - name: Cache Swift Packages
          id: cache-packages
          uses: actions/cache@v2
          with:
            path: SourcePackages
            key: ${{ runner.os }}-pods-${{ hashFiles('**/Package.resolved') }}
            restore-keys: |
              ${{ runner.os }}-spm-
              
        - name: Cache build
          uses: actions/cache@v2
          with:
            path: ~/Library/Developer/Xcode/DerivedData
            key: build-${{ github.sha }}

        - name: Run Unit Tests
          run: xcodebuild test-without-building
              -workspace "Halloapp.xcworkspace"
              -scheme "Halloapp"
              -destination "${{matrix.destination}}"
              -only-testing "HalloAppTests"
              -clonedSourcePackagesDirPath SourcePackages

  export-localizations:
      name: Export Localizations
      runs-on: macos-13
      needs: compile
      steps:
        - name: Checkout
          uses: actions/checkout@master
          
          # Set up SSH to fetch private HalloApp repositories
        - name: Set up ssh-agent
          uses: webfactory/ssh-agent@v0.5.3
          with:
            ssh-private-key: ${{ secrets.CI_PRIVATE_KEY }}
          
        - name: Set up Git to use SSH
          run: |
            for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
            git config --global url."git@github.com:".insteadOf "https://github.com/"

        - name: Cache Swift Packages
          id: cache-packages
          uses: actions/cache@v2
          with:
            path: SourcePackages
            key: ${{ runner.os }}-pods-${{ hashFiles('**/Package.resolved') }}
            restore-keys: |
              ${{ runner.os }}-spm-
        - name: Cache build
          uses: actions/cache@v2
          with:
            path: ~/Library/Developer/Xcode/DerivedData
            key: build-${{ github.sha }}

        - name: Build Localizations
          run: xcodebuild
              -exportLocalizations
              -localizationPath .
              -project HalloApp.xcodeproj
              -clonedSourcePackagesDirPath SourcePackages

          # Upload the localized files using the POEditor API
        - name: Upload Localizations
          run: curl -X POST https://api.poeditor.com/v2/projects/upload -F api_token=${{secrets.POEDITOR_API_KEY}} -F id="420915" -F updating="terms_translations" -F language="en" -F overwrite="1" -F fuzzy_trigger="1" -F file=@"en.xcloc/Localized Contents/en.xliff" -F sync_terms="1"
