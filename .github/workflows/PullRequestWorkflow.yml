name: Pull Request Workflow

# Triggers
on:
  pull_request:
    branches: [ master ] # On commits to a PR into master
  workflow_dispatch: # Manual trigger (run via Actions -> CI Workflow (lefthand side) -> Run workflow)

# Jobs to run. Each job is a seperate container and may/may not have dependency jobs (like finishing building before testing)
jobs:
  # Compile the project. This job sets up the repository and subsequently builds the project.
  compile:
    name: Compile Project
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        
        # Set up SSH to fetch private HalloApp repositories
      - name: Set up ssh-agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.CI_PRIVATE_KEY }}
          
      - name: Set up Git to use SSH
        run: |
            for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
            git config --global url."git@github.com:".insteadOf "https://github.com/"
        
        # Load cached CocoaPods if the Podfile matches. Also creates end-of-script step to save the CocoaPods if the Podfile didn't match or wasn't cached
      - name: Cache Pods
        id: cache-pods
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
            
        # If the pods couldn't be loaded, then run `pod install` to fetch and build the `CocoaPods`
      - name: Install CocoaPods
        if: steps.cache-pods.outputs.cache-hit != 'true'
        run: pod install
        
      - name: Cache Swift Packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: SourcePackages
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          
      - name: Extract branch name
        id: branch-name
        shell: bash
        run: |
            BRANCHNAME="${GITHUB_REF#refs/*/}"
            BRANCHNAME="${BRANCHNAME//\//_}"
            echo "::set-output name=branch::${BRANCHNAME}"
        
        # Loads a cache of the build from when the PR was first opened. Not perfect, but should speed a lot up
      - name: Load build cache from first push
        id: check-built
        uses: actions/cache@v2
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ steps.branch-name.outputs.branch }}
                
        # Build the project for all devices
        # If you want to build for more devices, change destination to include whatever devices you want
      - name: Build Project
        run: xcodebuild build-for-testing
            -workspace "Halloapp.xcworkspace"
            -scheme "Halloapp"
            -destination 'platform=iOS Simulator,name=iPhone 12 Pro'
            -clonedSourcePackagesDirPath SourcePackages
            
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: "$GITHUB_SHA"

  unit-test:
      name: Run Unit Tests
      runs-on: macOS-latest
      needs: compile
      strategy:
          matrix:
              destination: ['platform=iOS Simulator,name=iPhone 12 Pro'] # If you want to build for more devices, change this field to include whatever devices you want
      steps:
        - name: Checkout
          uses: actions/checkout@master

          # Load cached CocoaPods if the Podfile matches. Also creates end-of-script step to save the CocoaPods if the Podfile didn't match or wasn't cached
        - name: Cache Pods
          id: cache-pods
          uses: actions/cache@v2
          with:
            path: Pods
            key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-pods-

          # If the pods couldn't be loaded, then run `pod install` to fetch and build the `CocoaPods`
        - name: Install CocoaPods
          if: steps.cache-pods.outputs.cache-hit != 'true'
          run: pod install

        - name: Cache Swift Packages
          id: cache-packages
          uses: actions/cache@v2
          with:
            path: SourcePackages
            key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
            restore-keys: |
              ${{ runner.os }}-spm-
        
        - name: Cache build
          uses: actions/cache@v2
          with:
            path: ~/Library/Developer/Xcode/DerivedData
            key: "$GITHUB_SHA"

        - name: Run Unit Tests
          run: xcodebuild test-without-building
              -workspace "Halloapp.xcworkspace"
              -scheme "Halloapp"
              -destination "${{matrix.destination}}"
              -only-testing "HalloAppTests"
              -clonedSourcePackagesDirPath SourcePackages
